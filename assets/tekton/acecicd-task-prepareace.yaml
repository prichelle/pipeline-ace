apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: task-prepare-aceserver
spec:
  params:
    - default: image-registry.openshift-image-registry.svc:5000/ace/ace-minimal:12.0.1.0-alpine
      description: aceserver image
      name: ACE_IMAGE
      type: string
    - default: ./Dockerfile
      description: Path to the Dockerfile to build.
      name: DOCKERFILE
      type: string
    - default: 'false'
      description: Verify the TLS on the registry endpoint
      name: TLSVERIFY
      type: string
    - name: namespace
      default: ace
      description: namespace used to build the image url
    - name: "IMGNAME"
      description: "image name"
      default: "ace-cicd"
      type: string
    - name: "IMGTAG"
      description: "image tag"
      default: "1.0"
      type: string
  results:
    - name: image_tag
      description: tag from git acecfg for image
    - name: image_name
      description: name from git acecfg for image
  resources:
    inputs:
      - name: source
        type: git
      - name: image
        type: image
  steps:
    - name: prepare-bar
      image: $(params.ACE_IMAGE)
      script: |
        #!/bin/bash
        export LICENSE="accept"
        . /opt/ibm/ace-12/server/bin/mqsiprofile
        ls -la
        rm bars/*
        . ./imgcfg
        echo ">- building bar file for application $aceappname"
        cd source
        mqsipackagebar -a ../bars/Integration.bar -k $aceappname
        [ $? -ne 0 ] && exit 2
        if [[ -e "$aceappname/$aceappname.properties" ]]
        then
          mqsiapplybaroverride -b ../bars/Integration.bar -k $aceappname -p $aceappname/$aceappname.properties -o ../bars/IntegrationOver.bar
          rm ../bars/Integration.bar
          mv ../bars/IntegrationOver.bar ../bars/Integration.bar
          echo ">- property set"
          cat $aceappname/$aceappname.properties
        fi
        ls ../bars
      securityContext:
        privileged: true
      resources: {}
      volumeMounts:
        - mountPath: /var/lib/containers
          name: varlibcontainers
      workingDir: /workspace/source
    - name: ace-minimal-build-push
      image: gcr.io/kaniko-project/executor:v0.16.0
      # specifying DOCKER_CONFIG is required to allow kaniko to detect docker credential
      env:
        - name: "DOCKER_CONFIG"
          value: "/tekton/home/.docker/"
      command:
        - /kaniko/executor
      args:
        - --dockerfile=$(params.DOCKERFILE)
        - --destination=$(resources.inputs.image.url)/$(params.namespace)/$(params.IMGNAME):$(params.IMGTAG)
        - --context=.
        - --build-arg=BASE_IMAGE=$(resources.inputs.image.url)/$(params.namespace)/$(params.IMGNAME):$(params.IMGTAG)
        - --skip-tls-verify
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: varlibcontainers
      workingDir: /workspace/source
  volumes:
    - emptyDir: {}
      name: varlibcontainers